### Default configuration ###

# All properties defined here are available as place-holders in the Spring application context at:
#
#   META-INF/applicationContext.xml
#
# Properties defined here can thus be referenced in Spring using the ${} notation. E.g., property PROP will
# be available as ${PROP}.
#
# Note that the defaults that are defined here in default.properties can be overridden by either:
#
#   - properties in a file named test.properties on the classpath,
#   - Java system properties,
#   - or environment variables.
#
# This is useful to inject configuration values that are specific to a particular runtime environment.
# E.g. one could use adjusted configurations for development, testing, and production, without modifying this file itself.
#
# In alignment with widespread conventions for environment variables, it is suggested that the property names used here
# follow the same naming conventions as Java constants. That is, all upper-case, with underscores as word separators.




# Username and password for protecting the service by enforcing HTTP Basic Authentication (RFC 2617).
# The expected format is:
# * each white-space delimited token holds one pair of username and password
# * everything before the first colon (:) in the pair is the username
# * everything after the first colon (:) in the pair is the password
# Note that it is strongly advised not to hard-code the actual credentials here. Inject them through a environment variable instead.
BASIC_AUTHENTICATION_CREDENTIALS=

# Client credentials to use when invoking other YaaS services.
# Note that it is strongly advised not to hard-code an actual secret here. Inject them through a environment variable instead.
#CLIENT_ID=
#CLIENT_SECRET=

# A URL referencing the YaaS authorization service
#OAUTH2_TOKEN_ENDPOINT_URL=https://api.yaas.io/hybris/oauth2/v1/token
